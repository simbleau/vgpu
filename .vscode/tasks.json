/*
 Before using this tasks.json you may like to consider trying one of the following VS Code extensions:

 rust-analyzer (preferred)
    Marketplace: https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer
    Source: https://github.com/rust-analyzer/rust-analyzer

 rls
    Marketplace: https://marketplace.visualstudio.com/items?itemName=rust-lang.rust
    Source: https://github.com/rust-lang/rls-vscode

*/

// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "vgpu - Build",
      "command": "cargo",
      "args": ["build", "-v"],
      "group": "build",
      "problemMatcher": [
        {
          "owner": "rust",
          "fileLocation": ["relative", "${workspaceRoot}"],
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\d+):(\\d+)\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "endLine": 4,
            "endColumn": 5,
            "severity": 6,
            "message": 7
          }
        }
      ]
    },
    {
      "label": "vgpu - Clean",
      "args": ["clean"],
      "command": "cargo",
      "presentation": {
        "reveal": "always"
      }
    },
    {
      "label": "vgpu - Run",
      "args": ["run", "-v"],
      "command": "cargo",
      "presentation": {
        "reveal": "always"
      },
      "group": {
          "kind": "build",
          "isDefault": true
      },
      "problemMatcher": [
        {
          "owner": "rust",
          "fileLocation": ["relative", "${workspaceRoot}"],
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\d+):(\\d+)\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "endLine": 4,
            "endColumn": 5,
            "severity": 6,
            "message": 7
          }
        }
      ]
    },
    {
      "label": "vgpu - Test",
      "args": ["test"],
      "command": "cargo",
      "presentation": {
        "reveal": "always"
      },
      "group": {
          "kind": "test",
          "isDefault": true
      },
      "problemMatcher": [
        {
          "owner": "rust",
          "fileLocation": ["relative", "${workspaceRoot}"],
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\d+):(\\d+)\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "endLine": 4,
            "endColumn": 5,
            "severity": 6,
            "message": 7
          }
        },
        {
          "owner": "rust",
          "fileLocation": ["relative", "${workspaceRoot}"],
          "severity": "error",
          "pattern": {
            "regexp": "^.*panicked\\s+at\\s+'(.*)',\\s+(.*):(\\d+)$",
            "message": 1,
            "file": 2,
            "line": 3
          }
        }
      ]
    },
    {
      "label": "vgpu - Bench",
      "args": ["bench"],
      "command": "cargo",
      "presentation": {
        "reveal": "always"
      },
      "group": "test",
      "problemMatcher": [
        {
          "owner": "rust",
          "fileLocation": ["relative", "${workspaceRoot}"],
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\d+):(\\d+)\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "endLine": 4,
            "endColumn": 5,
            "severity": 6,
            "message": 7
          }
        },
        {
          "owner": "rust",
          "fileLocation": ["relative", "${workspaceRoot}"],
          "severity": "error",
          "pattern": {
            "regexp": "^.*panicked\\s+at\\s+'(.*)',\\s+(.*):(\\d+)$",
            "message": 1,
            "file": 2,
            "line": 3
          }
        }
      ]
    }
  ]
}